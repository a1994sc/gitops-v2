---
profile: ambient
pilot:
  autoscaleEnabled: true
  autoscaleMin: 3
  autoscaleMax: 5
  autoscaleBehavior: {}
  replicaCount: 3
  rollingMaxSurge: 100%
  rollingMaxUnavailable: 25%
  resources:
    requests:
      cpu: 500m
      memory: 2048Mi
  seccompProfile: {}
  cni:
    enabled: true
    provider: default
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 1
          preference:
            matchExpressions:
              - key: adrp.xyz/is-infra
                operator: In
                values:
                  - "true"
  tolerations:
    - key: CriticalOnly
      operator: "Exists"
    - key: InfrastructureOnly
      operator: Exists
  cpu:
    targetAverageUtilization: 80
  memory: {}
  # targetAverageUtilization: 80
telemetry:
  enabled: true
  v2:
    # For Null VM case now.
    # This also enables metadata exchange.
    enabled: true
    # Indicate if prometheus stats filter is enabled or not
    prometheus:
      enabled: true
    # stackdriver filter settings.
    stackdriver:
      enabled: false
meshConfig:
  enablePrometheusMerge: true
experimental:
  stableValidationPolicy: false
global:
  istioNamespace: istio-system
  certSigners: []
  defaultPodDisruptionBudget:
    enabled: true
    # The values aren't mutable due to a current PodDisruptionBudget limitation
    # minAvailable: 1
  hub: docker.io/istio
  variant: distroless
  istiod:
    enableAnalysis: false
  logAsJson: false
  logging:
    level: "default:info"
  proxy:
    image: proxyv2
    # This controls the 'policy' in the sidecar injector.
    autoInject: enabled
    # CAUTION: It is important to ensure that all Istio helm charts specify the same clusterDomain value
    # cluster domain. Default value is "cluster.local".
    clusterDomain: "cluster.local"
    # Per Component log level for proxy, applies to gateways and sidecars. If a component level is
    # not set, then the global "logLevel" will be used.
    componentLogLevel: "misc:error"
    # If set, newly injected sidecars will have core dumps enabled.
    enableCoreDump: false
    # istio ingress capture allowlist
    # examples:
    #     Redirect only selected ports:            --includeInboundPorts="80,8080"
    excludeInboundPorts: ""
    includeInboundPorts: "*"
    # istio egress capture allowlist
    # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly
    # example: includeIPRanges: "172.30.0.0/16,172.20.0.0/16"
    # would only capture egress traffic on those two IP Ranges, all other outbound traffic would
    # be allowed by the sidecar
    includeIPRanges: "*"
    excludeIPRanges: ""
    includeOutboundPorts: ""
    excludeOutboundPorts: ""
    # Log level for proxy, applies to gateways and sidecars.
    # Expected values are: trace|debug|info|warning|error|critical|off
    logLevel: warning
    #If set to true, istio-proxy container will have privileged securityContext
    privileged: false
    # The number of successive failed probes before indicating readiness failure.
    readinessFailureThreshold: 4
    # The initial delay for readiness probes in seconds.
    readinessInitialDelaySeconds: 0
    # The period between readiness probes.
    readinessPeriodSeconds: 15
    # Enables or disables a startup probe.
    # For optimal startup times, changing this should be tied to the readiness probe values.
    #
    # If the probe is enabled, it is recommended to have delay=0s,period=15s,failureThreshold=4.
    # This ensures the pod is marked ready immediately after the startup probe passes (which has a 1s poll interval),
    # and doesn't spam the readiness endpoint too much
    #
    # If the probe is disabled, it is recommended to have delay=1s,period=2s,failureThreshold=30.
    # This ensures the startup is reasonable fast (polling every 2s). 1s delay is used since the startup is not often ready instantly.
    startupProbe:
      enabled: true
      failureThreshold: 600 # 10 minutes
    # Resources for the sidecar.
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 2000m
        memory: 1024Mi
    # Default port for Pilot agent health checks. A value of 0 will disable health checking.
    statusPort: 15020
    # Specify which tracer to use. One of: zipkin, lightstep, datadog, stackdriver, none.
    # If using stackdriver tracer outside GCP, set env GOOGLE_APPLICATION_CREDENTIALS to the GCP credential file.
    tracer: "none"
  proxy_init:
    image: proxyv2
istio_cni:
  # `chained` has been deprecated and will be removed in a future release. use `provider` instead
  chained: true
  provider: default
# Gateway Settings
gateways:
  # Define the security context for the pod.
  # If unset, this will be automatically set to the minimum privileges required to bind to port 80 and 443.
  # On Kubernetes 1.22+, this only requires the `net.ipv4.ip_unprivileged_port_start` sysctl.
  securityContext: {}
