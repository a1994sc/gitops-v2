---
fullnameOverride: kubelet-csr-approver
tolerations:
  - key: CriticalOnly
    operator: "Exists"
  - key: InfrastructureOnly
    operator: Exists
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
    operator: Equal
loggingLevel: 0
leaderElection: true
replicas: 2
image:
  repository: ghcr.io/postfinance/kubelet-csr-approver
rbac:
  manage: true
metrics:
  enable: true
  serviceType: ClusterIP
  port: 8080
  annotations: {}
  serviceMonitor:
    enabled: false
    additionalLabels: {}
    interval: 1m
    scrapeTimeout: 10s
    metricRelabelings: []
    relabelings: []
serviceAccount:
  create: true
resources:
  limits:
    cpu: null
    memory: 32Mi
  requests:
    cpu: 10m
    memory: 18Mi
securityContext:
  runAsUser: 65532
  runAsGroup: 65532
  runAsNonRoot: true
  privileged: false
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
      - "all"
dnsPolicy: ""
dnsConfig: {}
podAnnotations: {}
podLabels: {}
# PriorityClass indicates the importance of a Pod relative to other Pods.
priorityClassName: ""
podSecurityContext: {}
providerRegex: ""
# optional, specified as a string (enclosed with ""). if left empty, defaults to 367 days
maxExpirationSeconds: ""
# optional, permits to bypass dns resolution checks. default: false
bypassDnsResolution: false
# number of DNS SAN names allowed in a certificate request. defaults to 1
allowedDnsNames: 1
# optional, permits ignoring CSRs with another Username than `system:node:...`
ignoreNonSystemNode: false
# optional, prevents csr denial, i.e. only lets kubelet-csr-approver approve valid CSRs but ignore other CSRs
skipDenyStep: false
# set this parameter to true to ignore mismatching DNS name and hostname
bypassHostnameCheck: false
# optional, list of IP (IPv4, IPv6) subnets that are allowed to submit CSRs
providerIpPrefixes: []
#   - 192.168.8.0/22
#   - fc00::/7
