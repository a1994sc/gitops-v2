---
name: Publish artifacts
on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - .github/**
  pull_request: {}
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for ghcr access
    steps:
      # Login to registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3.6.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Tool install
      - name: Install Cosign
        uses: sigstore/cosign-installer@faadad0cce49287aee09b3a48701e75088a2c6ad # v4.0.0

      - name: Install fluxcd
        uses: fluxcd/flux2/action@4a15fa6a023259353ef750acf1c98fe88407d4d0 # v2.7.2

      # Git logic
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Get Git Tag Info
        id: git-tag
        run: |-
          if ${{ startsWith(github.ref, 'refs/tags/') }}; then
            echo "tag=$(echo ${{ github.ref }})"
            echo "tag=$(echo ${{ github.ref }})" >> $GITHUB_OUTPUT
          else
            echo "tag=''"
            echo "tag=''" >> $GITHUB_OUTPUT
          fi

      - name: determine build info
        id: git
        shell: bash
        run: |-
          if [[ "${{ steps.git-tag.outputs.TAG }}" != "''" ]]; then
            echo "REV=${{ github.ref_name }}"
            echo "REV=${{ github.ref_name }}" >> "$GITHUB_ENV"
            echo "HASH="
            echo "HASH=" >> "$GITHUB_ENV"
          else
            echo "REV=$(git describe --first-parent | awk -F. -v OFS=. '{$3++}1')"
            echo "REV=$(git describe --first-parent | awk -F. -v OFS=. '{$3++}1')" >> "$GITHUB_ENV"
            echo "HASH=$(git describe --first-parent | sed -E 's/^v([0-9]+\.){2}[0-9]+//g')"
            echo "HASH=$(git describe --first-parent | sed -E 's/^v([0-9]+\.){2}[0-9]+//g')" >> "$GITHUB_ENV"
          fi

      # Publish OCI artifacts
      - name: Publish Flux OCI artifact to GHCR
        run: |
          flux push artifact oci://ghcr.io/a1994sc/gitops/core:${{ steps.git.outputs.REV }}${{ steps.git.outputs.HASH }} \
            --path="./." \
            --source="${{ github.event.repository.html_url }}" \
            --revision="${GITHUB_REF_NAME}/${GITHUB_SHA}" \
            --annotations='org.opencontainers.image.description=Gitops core for FluxCD' \
            --annotations='org.opencontainers.image.documentation=https://github.com/a1994sc/gitops-v2'
          flux tag artifact oci://ghcr.io/a1994sc/gitops/core:${{ steps.git.outputs.REV }}${{ steps.git.outputs.HASH }} --tag latest

      - name: Sign artifacts with Cosign
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |-
          cosign sign ghcr.io/a1994sc/gitops/core:${{ steps.git.outputs.REV }}${{ steps.git.outputs.HASH }} --yes
